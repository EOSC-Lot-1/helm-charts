{{/* vim: set syntax=helm: */}}

{{/*
Define the pod spec
*/}}
{{- define "mariadb-backup.podSpec" -}}

restartPolicy: Never
{{- with .Values.imagePullSecrets }}
imagePullSecrets:
  {{- toYaml . | nindent 8 }}
{{- end }}
serviceAccountName: {{ include "mariadb-backup.serviceAccountName" . }}
securityContext:
  {{- toYaml .Values.podSecurityContext | nindent 2 }}
volumes:
- name: output
  persistentVolumeClaim:
    claimName: {{ .Values.backup.outputFile.pvcName }}
- name: mariadb-home
  emptyDir: {}  
- name: temp
  emptyDir: {}
{{- if .Values.backup.s3.bucket }}
- name: s3cmd-config
  secret:
    secretName: {{ .Values.s3cmd.config.secretName }}
    defaultMode: 0640
- name: gnupg-home
  emptyDir: {}
{{- end }}

initContainers:

- name: prepare-config
  image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
  imagePullPolicy: {{ .Values.image.pullPolicy }}
  securityContext:
    {{- toYaml .Values.securityContext | nindent 4 }}
  env:
  {{- with .Values.backup.database }}
  - name: DB_HOST
    {{- if eq "string" (kindOf .host) }}
    value: {{ .host }}
    {{- else }}
    valueFrom:
      configMapKeyRef:
        name: {{ .host.configName }}
        key: {{ .host.key }}
    {{- end }}{{/* if eq "string" (kindOf .host) */}}
  - name: DB_PORT
    {{- if eq "string" (kindOf .port) }}
    value: {{ .port | quote }}
    {{- else }}
    valueFrom:
      configMapKeyRef:
        name: {{ .port.configName }}
        key: {{ .port.key }}
    {{- end }}{{/* if eq "string" (kindOf .port) */}}
  - name: DB_USER
    value: {{ .user }}
  - name: DB_PASS
    valueFrom:
      secretKeyRef:
        name: {{ .password.secretName }}
        key: {{ .password.key }}
  {{- end }}{{/* with .Values.backup.database */}}
  command:
  - bash
  - -ue
  - -c
  - |-
    touch ~/.my.cnf && chmod -v u=rw,g=,o= ~/.my.cnf
    echo -e "[client]\nhost=${DB_HOST}\nport=${DB_PORT}\nuser=${DB_USER}\npassword=${DB_PASS}" > ~/.my.cnf
  volumeMounts:
  - name: mariadb-home
    mountPath: /var/lib/mysql

- name: backup
  image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
  imagePullPolicy: {{ .Values.image.pullPolicy }}
  securityContext:
    {{- toYaml .Values.securityContext | nindent 4 }}
  env:
  - name: _POD_ID
    valueFrom:
      fieldRef:
        fieldPath: metadata.uid
  - name: OUTPUT_NAME
    value: $(_POD_ID).sql.gz
  - name: DB_NAME
    value: {{ .Values.backup.database.name }}
  command:
  - bash
  - -xue
  - -o
  - pipefail
  - -c
  - |-
    mariadb-dump --lock-tables -v ${DB_NAME} | gzip -c > ${OUTPUT_NAME}
  workingDir: /work
  volumeMounts:
  - name: mariadb-home
    mountPath: /var/lib/mysql
  {{- with .Values.backup.outputFile }}
  - name: output
    mountPath: /work
    {{- with .subPath }}
    subPath: {{ . }}
    {{- end }}{{/* with .subPath */}}
  {{- end }}{{/* with .Values.backup.outputFile */}}
  resources: {{- toYaml .Values.resources | nindent 10 }} 

{{- if .Values.backup.s3.bucket }}
- name: s3cmd
  image: "{{ .Values.s3cmd.image.repository }}:{{ .Values.s3cmd.image.tag }}"
  imagePullPolicy: {{ .Values.s3cmd.image.pullPolicy }}
  securityContext:
    {{- toYaml .Values.securityContext | nindent 4 }}
  env:
  - name: _POD_ID
    valueFrom:
      fieldRef:
        fieldPath: metadata.uid
  - name: OUTPUT_NAME
    value: $(_POD_ID).sql.gz
  - name: BASE_URL
    value: {{ printf "s3://%s/%s" (.Values.backup.s3.bucket) (.Values.backup.s3.prefix | default "") }}
  - name: OUTPUT_URL
    value: $(BASE_URL)/$(OUTPUT_NAME)
  command:
  - s3cmd
  {{- if .Values.s3cmd.debug }}
  - --debug
  {{- else }}
  - --verbose
  {{- end }}{{/* if .Values.s3cmd.debug */}}
  {{- if .Values.backup.s3.encrypt }}
  - --encrypt
  {{- end }}{{/* if .Values.backup.s3.encrypt */}}
  - --no-preserve
  - put
  - $(OUTPUT_NAME)
  - $(OUTPUT_URL)
  workingDir: /work
  volumeMounts:
  - name: s3cmd-config
    mountPath: /.s3cfg
    subPath: s3cmd.conf
    readOnly: true
  - name: gnupg-home
    mountPath: /.gnupg
  - name: temp
    mountPath: /tmp
  {{- with .Values.backup.outputFile }}
  - name: output
    mountPath: /work
    {{- with .subPath }}
    subPath: {{ . }}
    {{- end }} {{/* with .subPath */}}
  {{- end }}{{/* with .Values.backup.outputFile */}}
  resources: {{- toYaml .Values.resources | nindent 4 }}
{{- end }}{{/* if .Values.backup.s3.bucket */}}

containers:
- name: stat
  image: busybox:1.36
  securityContext:
    {{- toYaml .Values.securityContext | nindent 4 }}
  env:
  - name: _POD_ID
    valueFrom:
      fieldRef:
        fieldPath: metadata.uid
  - name: OUTPUT_NAME
    value: $(_POD_ID).sql.gz
  command:
  - stat
  - $(OUTPUT_NAME)
  workingDir: /work
  volumeMounts:
  {{- with .Values.backup.outputFile }}
  - name: output
    mountPath: /work
    {{- with .subPath }}
    subPath: {{ . }}
    {{- end }}{{/* with .subPath */}}
  {{- end }}{{/* with .Values.backup.outputFile */}}
  resources: {{- toYaml .Values.resources | nindent 4 }}
{{- with .Values.nodeSelector }}
nodeSelector:
  {{- toYaml . | nindent 2 }}
{{- end }}
{{- with .Values.affinity }}
affinity:
  {{- toYaml . | nindent 2 }}
{{- end }}
{{- with .Values.tolerations }}
tolerations:
  {{- toYaml . | nindent 2 }}
{{- end }}

{{- end }}{{/* define "mariadb-backup.podSpec" */}}


{{/*
Define the pod spec
*/}}
{{- define "mariadb-backup.jobSpec" -}}

backoffLimit: 1
completions: 1
parallelism: 1
template:
  metadata:
    {{- with .Values.podAnnotations }}
    annotations:
      {{- toYaml . | nindent 6 }}
    {{- end }}
    labels:
      {{- include "mariadb-backup.selectorLabels" . | nindent 6 }}
  spec:
    {{- include "mariadb-backup.podSpec" . | nindent 4 }}

{{- end }}{{/* define "mariadb-backup.jobSpec" */}}
